class Reservation:    def __init__(self, name, roomNumber):        self.name = name        self.roomNumber = roomNumber            def person_Reservation(self, person):        self.name = person    def room_reservation(self, person, room):        self.name = person        self.roomNumber = room    def setRoom(self, roomNumber):        self.roomNumber = roomNumber        def setName(self, name):        self.name = name        def getRoom(self):        return self.roomNumber        def getName(self):        return self.nameclass Hotel:    def __init__(self):        self.rooms = [0] * 5      def buidroom(self, num):        if len(self.rooms) < num:            # print("enter")            self.rooms.extend([0] * (num - len(self.rooms)))          else:            # print("enter")            self.rooms = self.rooms[:num]    def specificRoom(self, num):        self.rooms.extend([0] * num)         return f"Added {num} more rooms."    def reserveRoom(self, person, roomNum=None):        if roomNum is not None:            # print("enter1")            if 1 <= roomNum <= len(self.rooms) and self.rooms[roomNum - 1] == 0:                  self.rooms[roomNum - 1] = Reservation(person, roomNum)                # print("enter1")                print(f"{person} reserved Room {roomNum}")            else:                print(f"Room {roomNum} is not available")        else:            for i in range(len(self.rooms)):                if self.rooms[i] == 0:                     # print("enter1")                     self.rooms[i] = Reservation(person, i + 1)                    print(f"{person} reserved Room {i + 1}")                    # print("enter1")                    return i + 1            print(f"Hotel is full. No room available for {person}")    def cancelReservations(self, person):        for i in range(len(self.rooms)):            # print("kjbkj")            if self.rooms[i] != 0 and self.rooms[i].getName() == person:                  print(f"Cancelled reservations for {person}")                # print("nnn")                self.rooms[i] = 0                  break    def printReservations(self):        total_reserved = sum(1 for room in self.rooms if room != 0)          # print("enter1")        total_available = len(self.rooms) - total_reserved        # print("enter1")        print("Current Reservations:")        for i in range(len(self.rooms)):            # print("enter1")            if self.rooms[i] != 0:                  # print("enter1")                print(f"{self.rooms[i].getName()} - Room {self.rooms[i].getRoom()}")            print(f"Total Reservations: {total_reserved}")        print(f"Available Rooms: {total_available}")hotel = Hotel()while True:    try:        s = input().split()        if s[0].isdigit():            # print(s[0])            hotel.buidroom(int(s[0]))        if s[0] == "reserve":            # print("reserve")            if len(s) == 3:                # print("enter1")                hotel.reserveRoom(s[1], int(s[2]))            else:                hotel.reserveRoom(s[1])        elif s[0] == "print":            # print(s[1])            hotel.printReservations()        elif s[0] == "cancel" and len(s) > 1:            # print("enter1")            hotel.cancelReservations(s[1])        elif s[0] == "build":            # print("enter1")            print(hotel.specificRoom(int(s[1])))            except EOFError:        break